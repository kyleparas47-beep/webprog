NATIONAL UNIVERSITY EVENTS SYSTEM - DATABASE SETUP GUIDE
========================================================

This guide will help you set up the database for the National University Events System.

PREREQUISITES:
--------------
- XAMPP installed and running
- MySQL service started in XAMPP Control Panel
- phpMyAdmin accessible (usually at http://localhost/phpmyadmin)

STEP 1: CREATE THE DATABASE
---------------------------
1. Open phpMyAdmin in your browser (http://localhost/phpmyadmin)
2. Click on "New" in the left sidebar
3. Enter database name: "student_db"
4. Select collation: "utf8mb4_unicode_ci" (recommended)
5. Click "Create"

STEP 2: CREATE THE STUDENT TABLE
--------------------------------
1. Select the "student_db" database from the left sidebar
2. Click on "SQL" tab at the top
3. Copy and paste the following SQL code:

CREATE TABLE IF NOT EXISTS `student` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL UNIQUE,
  `password` varchar(255) NOT NULL,
  `role` varchar(50) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `role` (`role`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

4. Click "Go" to execute the query

STEP 3: CREATE THE EVENTS TABLE
-------------------------------
1. Make sure you're still in the "student_db" database
2. Click on "SQL" tab
3. Copy and paste the following SQL code:

CREATE TABLE IF NOT EXISTS `events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `description` text,
  `event_type` varchar(50) NOT NULL,
  `start_date` datetime NOT NULL,
  `end_date` datetime NOT NULL,
  `location` varchar(255) DEFAULT NULL,
  `capacity` int(11) DEFAULT 50,
  `created_by` int(11) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `created_by` (`created_by`),
  KEY `start_date` (`start_date`),
  KEY `event_type` (`event_type`),
  FOREIGN KEY (`created_by`) REFERENCES `student` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

4. Click "Go" to execute the query

STEP 4: CREATE THE EVENT REGISTRATIONS TABLE
---------------------------------------------
1. Make sure you're still in the "student_db" database
2. Click on "SQL" tab
3. Copy and paste the following SQL code:

CREATE TABLE IF NOT EXISTS `event_registrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `event_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `student_name` varchar(255) DEFAULT NULL,
  `section` varchar(100) DEFAULT NULL,
  `course` varchar(255) DEFAULT NULL,
  `ticket_number` varchar(20) DEFAULT NULL,
  `qr_code` text DEFAULT NULL,
  `attended` tinyint(1) DEFAULT 0,
  `attended_at` timestamp NULL DEFAULT NULL,
  `registered_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_registration` (`event_id`, `student_id`),
  UNIQUE KEY `ticket_number` (`ticket_number`),
  KEY `event_id` (`event_id`),
  KEY `student_id` (`student_id`),
  KEY `attended` (`attended`),
  FOREIGN KEY (`event_id`) REFERENCES `events` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`student_id`) REFERENCES `student` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

4. Click "Go" to execute the query

STEP 5: CREATE THE PASSWORD RESETS TABLE
----------------------------------------
1. Make sure you're still in the "student_db" database
2. Click on "SQL" tab
3. Copy and paste the following SQL code:

CREATE TABLE IF NOT EXISTS `password_resets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) NOT NULL,
  `code` varchar(6) NOT NULL,
  `expires_at` timestamp NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `email` (`email`),
  KEY `code` (`code`),
  KEY `expires_at` (`expires_at`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

4. Click "Go" to execute the query

STEP 6: INSERT SAMPLE DATA (OPTIONAL)
-------------------------------------
To test the system, you can insert sample data:

1. Click on "SQL" tab
2. Copy and paste the following SQL code:

-- Insert sample admin user
INSERT INTO `student` (`name`, `email`, `password`, `role`) VALUES
('Admin User', 'admin@nu.edu.ph', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin');

-- Insert sample student user
INSERT INTO `student` (`name`, `email`, `password`, `role`) VALUES
('John Student', 'student@nu.edu.ph', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'student');

-- Insert sample event
INSERT INTO `events` (`title`, `description`, `event_type`, `start_date`, `end_date`, `location`, `capacity`, `created_by`) VALUES
('Welcome Orientation', 'New student orientation program', 'Events', '2024-02-15 09:00:00', '2024-02-15 12:00:00', 'Main Auditorium', 200, 1);

3. Click "Go" to execute the query

NOTE: The sample passwords are hashed versions of "password". You can use:
- Email: admin@nu.edu.ph, Password: password (Admin account)
- Email: student@nu.edu.ph, Password: password (Student account)

STEP 7: VERIFY DATABASE CONNECTION
----------------------------------
1. Open your web application in the browser
2. Try to access the login page
3. If you see any database connection errors, check:
   - XAMPP MySQL service is running
   - Database name is exactly "student_db"
   - Database credentials in config.php are correct

TROUBLESHOOTING:
----------------
1. If you get "Connection failed" error:
   - Check if XAMPP MySQL service is running
   - Verify database name is "student_db"
   - Check config.php file for correct credentials

2. If you get "Table doesn't exist" error:
   - Make sure you created all tables in the correct database
   - Check table names are exactly as specified

3. If you get "Access denied" error:
   - Check MySQL username and password in config.php
   - Default XAMPP MySQL credentials are usually: username="root", password=""

4. If foreign key constraints fail:
   - Make sure you created tables in the correct order
   - Check that referenced tables exist before creating foreign keys

CONFIGURATION FILE:
-------------------
Make sure your config.php file contains:
<?php
$host = "localhost";
$user = "root";
$password = "";
$database = "student_db";

$conn = new mysqli($host, $user, $password, $database);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>

FINAL NOTES:
------------
- The system supports two user roles: 'admin' and 'student'
- Admins can create, edit, and delete events
- Students can view events and register for them
- Password reset functionality uses 6-digit codes
- All timestamps are automatically managed by MySQL
- The system uses UTF-8 encoding for international character support

For support or questions, refer to the application documentation or contact the development team.

========================================================
END OF DATABASE SETUP GUIDE
========================================================

